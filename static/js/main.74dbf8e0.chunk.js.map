{"version":3,"sources":["components/Container/index.js","styles/palette.js","components/Header/index.js","components/Table/Row.js","components/Table/index.js","config/urls.js","api/users.js","containers/Users/index.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","palette","blue","clouds","alto","StyledHeader","header","Header","StyledRow","tr","Row","children","StyledTable","table","Table","data","map","item","index","surname","name","middlename","format","Date","dateofbirth","address","urls","apiUrl","getUsers","a","fetch","res","json","Users","useQuery","users","isSuccess","client","QueryClient","defaultOptions","queries","staleTime","Infinity","retry","refetchOnWindowFocus","App","QueryClientProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAUeA,EARGC,IAAOC,IAAV,6ICIAC,EANC,CACdC,KAAM,UACNC,OAAQ,UACRC,KAAM,W,OCGFC,EAAeN,IAAOO,OAAV,6NACFL,EAAQG,MAwBTG,EAVA,WACb,OACE,cAACF,EAAD,UACE,cAAC,EAAD,UACE,0C,QCpBFG,EAAYT,IAAOU,GAAV,uLAEGR,EAAQE,OAMNF,EAAQG,MAUbM,EAJH,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACb,OAAO,cAACH,EAAD,UAAYG,KCZfC,EAAcb,IAAOc,MAAV,sFAGKZ,EAAQG,MAkCfU,EA/BD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACf,OACE,eAACH,EAAD,WACE,gCACE,eAAC,EAAD,WACE,yCACA,sCACA,4CACA,+CACA,8CAGJ,gCACGG,EAAKC,KAAI,SAACC,EAAMC,GAAP,OACR,eAAC,EAAD,WACE,6BAAKD,EAAKE,UACV,6BAAKF,EAAKG,OACV,6BAAKH,EAAKI,aACV,6BAAKC,YAAO,IAAIC,KAAKN,EAAKO,aAAc,gBACxC,6BAAKP,EAAKQ,YALFP,Y,kDCxBLQ,EAJF,CACXC,OAAQ,yCCGGC,EAAQ,uCAAG,4BAAAC,EAAA,sEACJC,IAAM,GAAD,OAAIJ,EAAKC,OAAT,kBADD,cAChBI,EADgB,yBAEfA,EAAIC,QAFW,2CAAH,qDCMNC,EALD,WAAO,IAAD,EDKXC,YAAS,QAASN,GCJXO,EADI,EACVpB,KACR,OAFkB,EACGqB,UACA,cAAC,EAAD,CAAOrB,KAAMoB,IAAY,cCC1CE,EAAS,IAAIC,IAAY,CAC7BC,eAAgB,CACdC,QAAS,CACPC,UAAWC,IACXC,OAAO,EACPC,sBAAsB,MAgBbC,MAXf,WACE,OACE,eAACC,EAAA,EAAD,CAAqBT,OAAQA,EAA7B,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UACE,cAAC,EAAD,UCXOU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.74dbf8e0.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  max-width: 960px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n`;\r\n\r\nexport default Container;\r\n\r\n\r\n\r\n","const palette = {\r\n  blue: '#0000ff',\r\n  clouds: '#f4f4f4',\r\n  alto: '#dbdbdb',\r\n};\r\n\r\nexport default palette;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport palette from '../../styles/palette';\r\nimport Container from '../Container';\r\n\r\nconst StyledHeader = styled.header`\r\n  background: ${palette.alto};\r\n  height: 50px;\r\n  width: 100%;\r\n  margin-bottom: 30px;\r\n\r\n  p {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-weight: bold;\r\n    padding-top: 15px;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <StyledHeader>\r\n      <Container>\r\n        <p>Logo</p>\r\n      </Container>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport palette from '../../styles/palette';\n\nconst StyledRow = styled.tr`\n  &:nth-child(2n) {\n    background: ${palette.clouds};\n  }\n\n  thead & {\n    td {\n      font-weight: bold;\n      background: ${palette.alto};\n      height: 50px;\n    }\n  }\n`;\n\nconst Row = ({ children }) => {\n  return <StyledRow>{children}</StyledRow>;\n};\n\nexport default Row;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\n\nimport Row from './Row';\nimport palette from '../../styles/palette';\n\nconst StyledTable = styled.table`\n  height: 60vh;\n  width: 100%;\n  border: 3px solid ${palette.alto};\n`;\n\nconst Table = ({ data }) => {\n  return (\n    <StyledTable>\n      <thead>\n        <Row>\n          <td>Surname</td>\n          <td>Name</td>\n          <td>Patronymic</td>\n          <td>Date of birth</td>\n          <td>Address</td>\n        </Row>\n      </thead>\n      <tbody>\n        {data.map((item, index) => (\n          <Row key={index}>\n            <td>{item.surname}</td>\n            <td>{item.name}</td>\n            <td>{item.middlename}</td>\n            <td>{format(new Date(item.dateofbirth), 'yyyy-MM-dd')}</td>\n            <td>{item.address}</td>\n          </Row>\n        ))}\n      </tbody>\n    </StyledTable>\n  );\n};\n\nTable.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Table;\n","const urls = {\r\n  apiUrl: '//60fd183d1fa9e90017c70d64.mockapi.io',\r\n};\r\n\r\nexport default urls;\r\n","import fetch from 'cross-fetch';\r\nimport { useQuery } from 'react-query';\r\nimport urls from '../config/urls';\r\n\r\nexport const getUsers = async () => {\r\n  const res = await fetch(`${urls.apiUrl}/api/v1/users`);\r\n  return res.json();\r\n};\r\n\r\nexport const useUsers = () => {\r\n  return useQuery('users', getUsers);\r\n};\r\n","import React from 'react';\r\n\r\nimport Table from '../../components/Table';\r\nimport { useUsers } from '../../api/users';\r\n\r\nconst Users = () => {\r\n  const { data: users, isSuccess: usersLoaded } = useUsers();\r\n  return usersLoaded ? <Table data={users} /> : 'loading...';\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport 'normalize.css';\n\nimport Container from './components/Container';\nimport Header from './components/Header';\nimport Users from './containers/Users';\n\nconst client = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: Infinity,\n      retry: false,\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <QueryClientProvider client={client}>\n      <Header />\n      <Container>\n        <Users />\n      </Container>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}