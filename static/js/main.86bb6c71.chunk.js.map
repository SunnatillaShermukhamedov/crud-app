{"version":3,"sources":["components/Container/index.js","styles/palette.js","components/Header/index.js","components/Table/Row.js","components/Button/index.js","components/Paragraph/index.js","components/Modal/index.js","components/TextField/index.js","components/DatePicker/index.js","hooks/useQueryInvalidator.js","config/urls.js","api/keys.js","api/users.js","containers/UserFormModal/index.js","containers/UserDeleteModal/index.js","components/Table/index.js","containers/Users/index.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","palette","white","clouds","alto","ghost","silver","trout","black","blue","StyledHeader","header","Header","StyledRow","tr","Row","children","StyledButton","button","ifProp","size","css","prop","Button","title","$margin","onClick","props","$width","defaultProps","Paragraph","p","propTypes","$textAlign","PropTypes","oneOf","$marginTop","string","$marginBottom","modalStyles","overlay","position","overflowY","zIndex","padding","height","content","inset","width","margin","overflow","background","maxWidth","display","justifyContent","ModalDialog","CloseButton","Modal","className","closeModal","isOpen","style","bodyOpenClassName","onRequestClose","classNames","shouldCloseOnOverlayClick","as","$fontSize","InputWrapper","StyledTextField","input","TextField","type","useField","field","meta","touched","error","FieldWrapper","DatePickerField","createPredicateFilter","queriesFilter","predicate","queryKey","findMutations","queryClient","key","mutator","updates","getQueryCache","findAll","forEach","oldData","getQueryData","pages","newPages","oldPages","oldPageData","index","newPageData","push","newData","useInvalidator","useQueryClient","queryCache","useMemo","mutate","commit","u","setQueryData","rollback","invalidate","a","invalidateQueries","reset","resetActive","q","isActive","resetQueries","unsubscribe","subscribe","urls","apiUrl","Read","Users","getUsers","fetch","res","json","updateUser","fields","id","method","body","JSON","stringify","headers","deleteUser","createUser","useManageUser","invalidator","useQueryInvalidator","useMutation","mutationFn","onMutate","onSettled","data","onComplete","onError","onSuccess","transaction","onUpdateUser","useCallback","func","findIndex","item","clone","cloneDeep","name","surname","middlename","dateofbirth","address","onDeleteUser","splice","onCreateUser","update","create","delete","ModalWrapper","validationSchema","Yup","shape","min","max","required","UserFormModal","profile","manage","editMode","initialValues","Date","onSubmit","values","setSubmitting","isSubmitting","setFieldValue","placeholder","maxLength","DatePicker","placeholderText","selected","onChange","date","disabled","UserDeleteModal","_","StyledTable","table","Table","useState","editProfile","setEditProfile","openEditModal","deleteProfile","setDeleteProfile","openDeleteModal","map","format","bind","useQuery","users","isSuccess","client","QueryClient","defaultOptions","queries","staleTime","Infinity","retry","refetchOnWindowFocus","ReactModal","setAppElement","App","showModal","setModal","QueryClientProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86bb6c71.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  max-width: 960px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n`;\r\n\r\nexport default Container;\r\n","const palette = {\r\n  white: '#ffffff',\r\n  clouds: '#f4f4f4',\r\n  alto: '#dbdbdb',\r\n  ghost: '#ced4da',\r\n  silver: '#c8c8c8',\r\n  trout: '#495057',\r\n  black: '#000000',\r\n\r\n  blue: '#0000ff',\r\n};\r\n\r\nexport default palette;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport palette from '../../styles/palette';\r\nimport Container from '../Container';\r\n\r\nconst StyledHeader = styled.header`\r\n  background: ${palette.alto};\r\n  height: 50px;\r\n  width: 100%;\r\n  margin-bottom: 30px;\r\n\r\n  p {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-weight: bold;\r\n    padding-top: 15px;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <StyledHeader>\r\n      <Container>\r\n        <p>Logo</p>\r\n      </Container>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport palette from '../../styles/palette';\n\nconst StyledRow = styled.tr`\n  &:nth-child(2n) {\n    background: ${palette.clouds};\n  }\n\n  thead & {\n    td {\n      font-weight: bold;\n      background: ${palette.alto};\n      height: 50px;\n    }\n  }\n`;\n\nconst Row = ({ children }) => {\n  return <StyledRow>{children}</StyledRow>;\n};\n\nexport default Row;\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { ifProp, prop } from 'styled-tools';\r\n\r\nimport palette from '../../styles/palette';\r\n\r\nconst StyledButton = styled.button`\r\n  background: ${palette.alto};\r\n  color:  ${palette.black};\r\n  border: 3px solid ${palette.clouds};\r\n  border-radius: 8px;\r\n\r\n\r\n  ${ifProp(\r\n    { size: 'medium' },\r\n    css`\r\n      padding: 10px 20px;\r\n    `,\r\n  )}\r\n  ${ifProp(\r\n    { size: 'small' },\r\n    css`\r\n      padding: 5px 10px;\r\n    `,\r\n  )};\r\n  ${ifProp(\r\n    '$margin',\r\n    css`\r\n      margin: ${prop('$margin')};\r\n    `,\r\n  )};\r\n`;\r\n\r\nconst Button = ({ title, size, $margin, onClick, ...props }) => {\r\n  return (\r\n    <StyledButton\r\n      size={size}\r\n      $width=\"120px\"\r\n      $margin={$margin}\r\n      onClick={onClick}\r\n      {...props}\r\n    >\r\n      {title}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string,\r\n  size: PropTypes.oneOf(['small', 'medium']),\r\n};\r\n\r\nButton.defaultProps = {\r\n  size: 'medium',\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { prop } from 'styled-tools';\r\n\r\nconst Paragraph = styled.p`\r\n  text-align: ${prop('$textAlign', 'left')};\r\n  margin-top: ${prop('$marginTop', '0')};\r\n  margin-bottom: ${prop('$marginBottom', '8px')};\r\n  font-size: ${prop('$fontSize', 'inherit')}\r\n`;\r\n\r\nParagraph.propTypes = {\r\n  $textAlign: PropTypes.oneOf(['left', 'center', 'right']),\r\n  $marginTop: PropTypes.string,\r\n  $marginBottom: PropTypes.string,\r\n};\r\n\r\nexport default Paragraph;\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport palette from '../../styles/palette';\r\nimport Paragraph from '../Paragraph';\r\n\r\nconst modalStyles = {\r\n  overlay: {\r\n    position: 'fixed',\r\n    overflowY: 'scroll',\r\n    zIndex: 2,\r\n    padding: '27px 0',\r\n    height: '100%',\r\n  },\r\n  content: {\r\n    inset: 0,\r\n    width: '90%',\r\n    margin: '0 auto',\r\n    overflow: 'initial',\r\n    background: 'transparent',\r\n    maxWidth: '800px',\r\n    height: 'auto',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n};\r\n\r\nconst ModalDialog = styled.div`\r\n  background: ${palette.white};\r\n  border-radius: 8px;\r\n  box-shadow: 1px 1px 4px ${palette.silver};\r\n  border: 1px solid ${palette.silver};\r\n  padding: 36px;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  width: 16px;\r\n  height: 16px;\r\n  border: 0;\r\n  top: 16px;\r\n  right: 16px;\r\n  background: transparent;\r\n  padding: 0;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Modal = ({ className, children, title, closeModal }) => {\r\n  return (\r\n    <ReactModal\r\n      isOpen={true}\r\n      style={modalStyles}\r\n      bodyOpenClassName=\"modal-open\"\r\n      onRequestClose={closeModal}\r\n      className={classNames('modal-content', className)}\r\n      shouldCloseOnOverlayClick={true}\r\n    >\r\n      <ModalDialog>\r\n        {title && (\r\n          <Paragraph\r\n            as=\"h3\"\r\n            className=\"modal-title\"\r\n            $marginBottom=\"36px\"\r\n            $fontSize=\"20px\"\r\n          >\r\n            {title}\r\n          </Paragraph>\r\n        )}\r\n        {children}\r\n        <CloseButton onClick={closeModal}>&times;</CloseButton>\r\n      </ModalDialog>\r\n    </ReactModal>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  closeModal: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { useField } from 'formik';\r\n\r\nimport palette from '../../styles/palette';\r\n\r\nconst InputWrapper = styled.div``;\r\n\r\nconst StyledTextField = styled.input`\r\n  border: ${palette.ghost} 1px solid;\r\n  border-radius: 8px;\r\n  display: block;\r\n  width: calc(100% - 20px);\r\n  margin-bottom: 10px;\r\n  height 40px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  outline: none;\r\n\r\n\r\n  ::placeholder {\r\n    color: ${palette.ghost}\r\n  }\r\n\r\n`;\r\n\r\nconst TextField = ({ type, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <InputWrapper>\r\n      <StyledTextField type={type} {...field} {...props} />\r\n      {meta.touched && meta.error && <div>{meta.error}</div>}\r\n    </InputWrapper>\r\n  );\r\n};\r\n\r\nTextField.propTypes = {\r\n  type: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  maxLength: PropTypes.number,\r\n  name: PropTypes.string,\r\n};\r\n\r\nTextField.defaultProps = {\r\n  type: 'text',\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { useField } from \"formik\";\r\n\r\n\r\nimport palette from '../../styles/palette';\r\n\r\nconst FieldWrapper = styled.div`\r\n  .react-datepicker-wrapper {\r\n    display: block;\r\n  }\r\n  .react-datepicker__input-container input {\r\n    border: ${palette.ghost} 1px solid;\r\n    border-radius: 8px;\r\n    display: block;\r\n    width: calc(100% - 20px);\r\n    margin-bottom: 10px;\r\n    height 40px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    outline: none;\r\n\r\n    ::placeholder {\r\n      color: ${palette.ghost}\r\n    }\r\n  }\r\n`;\r\n\r\nconst DatePickerField = (props) => {\r\n  const [field] = useField(props);\r\n  return (\r\n    <FieldWrapper>\r\n      <DatePicker {...field} {...props} />\r\n    </FieldWrapper>\r\n  );\r\n};\r\n\r\nexport default DatePickerField;\r\n","import { useMemo } from 'react';\nimport { useQueryClient } from 'react-query';\n\nconst useInvalidator = () => {\n  const queryClient = useQueryClient();\n  const queryCache = queryClient.getQueryCache();\n\n  return useMemo(() => {\n    const invalidate = async (key, queriesFilter) => {\n      queryClient.invalidateQueries(key, createPredicateFilter(queriesFilter));\n    };\n\n    const reset = async (key, queriesFilter, resetActive = true) => {\n      const queries = queryCache.findAll(\n        key,\n        createPredicateFilter(queriesFilter),\n      );\n      queries.forEach((q) => {\n        if (resetActive || !q.isActive()) {\n          queryClient.resetQueries(q.queryKey)\n        } else {\n          const unsubscribe = queryCache.subscribe(() => {\n            if (!q.isActive()) {\n              unsubscribe();\n              queryClient.resetQueries(q.queryKey);\n            }\n          });\n        }\n      });\n    };\n\n    const mutate = (key, queriesFilter, mutator) => {\n      const updates = findMutations(queryClient, key, queriesFilter, mutator);\n      return {\n        commit: () => {\n          updates.forEach((u) => {\n            queryClient.setQueryData(u.key, u.newData);\n          });\n        },\n        rollback: () => {\n          updates.forEach((u) => queryClient.setQueryData(u.key, u.oldData));\n        },\n      };\n    };\n\n    return {\n      mutate,\n      invalidate,\n      reset,\n    };\n  }, [queryClient, queryCache]);\n};\n\nconst createPredicateFilter = (queriesFilter) => {\n  if (!queriesFilter) {\n    return {};\n  }\n  return {\n    predicate: ({ queryKey }) => {\n      return queryKey[1] && queriesFilter(queryKey[1]);\n    },\n  };\n};\n\nconst findMutations = (queryClient, key, queriesFilter, mutator) => {\n  const updates = [];\n  const queryCache = queryClient.getQueryCache();\n  const queries = queryCache.findAll(key, createPredicateFilter(queriesFilter));\n\n  queries.forEach((key) => {\n    const oldData = queryClient.getQueryData(key);\n    if (oldData && oldData.pages) {\n      const oldPages = (oldData && oldData.pages) || [];\n      let newPages;\n      oldPages.forEach((oldPageData, index) => {\n        const newPageData = mutator(oldPageData);\n        if (newPageData && newPageData !== oldPageData) {\n          newPages = newPages || [...oldPages];\n          newPages[index] = newPageData;\n        }\n      });\n      if (newPages) {\n        updates.push({\n          key,\n          oldData,\n          newData: { ...oldData, pages: newPages },\n        });\n      }\n    } else {\n      const newData = oldData ? mutator(oldData) : null;\n      if (newData && newData !== oldData) {\n        updates.push({ key, newData, oldData });\n      }\n    }\n  });\n  return updates;\n};\n\nexport default useInvalidator;\n","const urls = {\r\n  apiUrl: '//60fd183d1fa9e90017c70d64.mockapi.io',\r\n};\r\n\r\nexport default urls;\r\n","const Read = {\r\n  Users: () => 'users',\r\n};\r\n\r\nexport default Read;\r\n","import fetch from 'cross-fetch';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useMutation, useQuery } from 'react-query';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\n\r\nimport useQueryInvalidator from '../hooks/useQueryInvalidator';\r\nimport urls from '../config/urls';\r\nimport Read from './keys';\r\n\r\nexport const getUsers = async () => {\r\n  const res = await fetch(`${urls.apiUrl}/api/v1/users`);\r\n  return res.json();\r\n};\r\n\r\nexport const useUsers = () => {\r\n  return useQuery(Read.Users(), getUsers);\r\n};\r\n\r\nexport const updateUser = async (fields) => {\r\n  const { id } = fields;\r\n  const res = await fetch(`${urls.apiUrl}/api/v1/users/${id}`, {\r\n    method: 'put',\r\n    body: JSON.stringify(fields),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  return res.json();\r\n};\r\n\r\nexport const deleteUser = async (id) => {\r\n  const res = await fetch(`${urls.apiUrl}/api/v1/users/${id}`, {\r\n    method: 'delete',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  return res.json();\r\n};\r\n\r\nexport const createUser = async (fields) => {\r\n  const res = await fetch(`${urls.apiUrl}/api/v1/users`, {\r\n    method: 'post',\r\n    body: JSON.stringify(fields),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  return res.json();\r\n};\r\n\r\nexport const useManageUser = () => {\r\n  const mutationFn = ({ mutationFn }) => mutationFn;\r\n  const invalidator = useQueryInvalidator();\r\n  const { mutate } = useMutation(mutationFn, {\r\n    onMutate: ({ onMutate }) => {\r\n      if (onMutate) {\r\n        return onMutate(invalidator);\r\n      }\r\n      return {};\r\n    },\r\n    onSettled: (\r\n      data,\r\n      error,\r\n      { onComplete, onError, onSuccess },\r\n      { transaction },\r\n    ) => {\r\n      if (data && !error && onSuccess) {\r\n        onSuccess(data, invalidator);\r\n      }\r\n      if (error && onError) {\r\n        onError(error);\r\n      }\r\n      if (error && transaction) {\r\n        transaction.rollback();\r\n      }\r\n      if (onComplete) {\r\n        onComplete(data, error);\r\n      }\r\n    },\r\n  });\r\n\r\n  const onUpdateUser = useCallback(\r\n    (fields, onComplete) => {\r\n      const func = updateUser(fields);\r\n      const onSuccess = (data, invalidator) => {\r\n        const transaction = invalidator.mutate(Read.Users(), null, (data) => {\r\n          const index = data.findIndex((item) => item.id === fields.id);\r\n          if (data[index]) {\r\n            const clone = cloneDeep(data);\r\n            clone[index].name = fields.name;\r\n            clone[index].surname = fields.surname;\r\n            clone[index].middlename = fields.middlename;\r\n            clone[index].dateofbirth = fields.dateofbirth;\r\n            clone[index].address = fields.address;\r\n            return clone;\r\n          }\r\n          return null;\r\n        });\r\n        transaction.commit();\r\n      };\r\n      mutate({\r\n        mutationFn: func,\r\n        onSuccess,\r\n        onComplete,\r\n      });\r\n    },\r\n    [mutate],\r\n  );\r\n  const onDeleteUser = useCallback(\r\n    (id, onComplete) => {\r\n      const func = deleteUser(id);\r\n      const onSuccess = (data, invalidator) => {\r\n        const transaction = invalidator.mutate(Read.Users(), null, (data) => {\r\n          const index = data.findIndex((item) => item.id === id);\r\n          if (data[index]) {\r\n            const clone = cloneDeep(data);\r\n            clone.splice(index, 1);\r\n            return clone;\r\n          }\r\n          return null;\r\n        });\r\n        transaction.commit();\r\n      };\r\n      mutate({\r\n        mutationFn: func,\r\n        onSuccess,\r\n        onComplete,\r\n      });\r\n    },\r\n    [mutate],\r\n  );\r\n\r\n  const onCreateUser = useCallback(\r\n    (fields, onComplete) => {\r\n      const func = createUser(fields);\r\n      const onSuccess = (data, invalidator) => {\r\n        invalidator.reset(Read.Users(), null);\r\n      };\r\n      mutate({\r\n        mutationFn: func,\r\n        onSuccess,\r\n        onComplete,\r\n      });\r\n    },\r\n    [mutate],\r\n  );\r\n\r\n  return useMemo(\r\n    () => ({\r\n      update: onUpdateUser,\r\n      create: onCreateUser,\r\n      delete: onDeleteUser,\r\n    }),\r\n    [onUpdateUser, onCreateUser, onDeleteUser],\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport Modal from '../../components/Modal';\r\nimport TextField from '../../components/TextField';\r\nimport DatePickerField from '../../components/DatePicker';\r\nimport Button from '../../components/Button';\r\nimport Paragraph from '../../components/Paragraph';\r\nimport { useManageUser } from '../../api/users';\r\n\r\nconst ModalWrapper = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Name is required'),\r\n  surname: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Surname is required'),\r\n});\r\n\r\nconst UserFormModal = ({ title, closeModal, profile }) => {\r\n  const manage = useManageUser();\r\n  const editMode = !!profile;\r\n  const handleSave = (values, { setSubmitting }) => {\r\n    if (editMode) {\r\n      manage.update(values, () => {\r\n        setSubmitting(false);\r\n        closeModal();\r\n      });\r\n    } else {\r\n      manage.create(values, () => {\r\n        setSubmitting(false);\r\n        closeModal();\r\n      });\r\n    }\r\n  };\r\n\r\n  const initialValues = profile\r\n    ? {\r\n        ...profile,\r\n        dateofbirth: profile.dateofbirth ? new Date(profile.dateofbirth) : '',\r\n      }\r\n    : {\r\n        name: '',\r\n        surname: '',\r\n        middlename: '',\r\n        dateofbirth: '',\r\n        address: '',\r\n      };\r\n\r\n  return (\r\n    <Modal title={title} closeModal={closeModal}>\r\n      <ModalWrapper>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={handleSave}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {({ values, isSubmitting, setFieldValue }) => (\r\n            <Form>\r\n              <TextField\r\n                placeholder=\"Surname\"\r\n                type=\"text\"\r\n                maxLength={30}\r\n                name=\"surname\"\r\n              />\r\n              <TextField\r\n                placeholder=\"Name\"\r\n                type=\"text\"\r\n                maxLength={30}\r\n                name=\"name\"\r\n              />\r\n              <TextField\r\n                placeholder=\"Middle name\"\r\n                type=\"text\"\r\n                maxLength={30}\r\n                name=\"middlename\"\r\n              />\r\n              <DatePickerField\r\n                name=\"dateofbirth\"\r\n                placeholderText=\"Date OF Birth\"\r\n                selected={values.dateofbirth}\r\n                onChange={(date) => setFieldValue('dateofbirth', date)}\r\n              />\r\n\r\n              <TextField\r\n                placeholder=\"Address\"\r\n                type=\"text\"\r\n                maxLength={30}\r\n                name=\"address\"\r\n              />\r\n              <Paragraph $textAlign=\"right\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  title=\"Save\"\r\n                  size=\"medium\"\r\n                  disabled={isSubmitting}\r\n                />\r\n              </Paragraph>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </ModalWrapper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nUserFormModal.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n  profile: PropTypes.object,\r\n};\r\n\r\nexport default UserFormModal;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Form, Formik } from 'formik';\r\n\r\nimport Modal from '../../components/Modal';\r\nimport Button from '../../components/Button';\r\nimport Paragraph from '../../components/Paragraph';\r\nimport { useManageUser } from '../../api/users';\r\n\r\nconst ModalWrapper = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst UserDeleteModal = ({ title, closeModal, profile }) => {\r\n  const manage = useManageUser();\r\n\r\n  const handleDelete = (_, { setSubmitting }) => {\r\n    manage.delete(profile.id, () => {\r\n      setSubmitting(false);\r\n      closeModal();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal title={title} closeModal={closeModal}>\r\n      <ModalWrapper>\r\n        <Formik\r\n          initialValues={{}}\r\n          onSubmit={handleDelete}\r\n        >\r\n          {({  isSubmitting }) => (\r\n            <Form>\r\n              <Paragraph>Are you sure to delete {profile.surname} {profile.name}?</Paragraph>\r\n\r\n\r\n              <Paragraph $textAlign=\"right\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  title=\"Confirm\"\r\n                  size=\"medium\"\r\n                  disabled={isSubmitting}\r\n                />\r\n\r\n                <Button\r\n                  onClick={closeModal}\r\n                  type=\"submit\"\r\n                  title=\"Cancel\"\r\n                  size=\"medium\"\r\n                  disabled={isSubmitting}\r\n                />\r\n              </Paragraph>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </ModalWrapper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nUserDeleteModal.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n  profile: PropTypes.object,\r\n};\r\n\r\nexport default UserDeleteModal;\r\n","import React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\n\nimport Row from './Row';\nimport Button from '../Button';\nimport Paragraph from '../Paragraph';\nimport UserFormModal from '../../containers/UserFormModal';\nimport UserDeleteModal from '../../containers/UserDeleteModal';\n\nimport palette from '../../styles/palette';\n\nconst StyledTable = styled.table`\n  height: 60vh;\n  width: 100%;\n  border: 3px solid ${palette.alto};\n`;\n\nconst Table = ({ data }) => {\n  const [editProfile, setEditProfile] = useState(false);\n  const openEditModal = useCallback((profile) => setEditProfile(profile), []);\n\n  const [deleteProfile, setDeleteProfile] = useState(false);\n  const openDeleteModal = useCallback((profile) => setDeleteProfile(profile), []);\n\n  return (\n    <>\n      <StyledTable>\n        <thead>\n          <Row>\n            <td>Surname</td>\n            <td>Name</td>\n            <td>Patronymic</td>\n            <td>Date of birth</td>\n            <td>Address</td>\n            <td></td>\n          </Row>\n        </thead>\n        <tbody>\n          {data.map((profile, index) => (\n            <Row key={index}>\n              <td>{profile.surname}</td>\n              <td>{profile.name}</td>\n              <td>{profile.middlename}</td>\n              <td>{format(new Date(profile.dateofbirth), 'yyyy-MM-dd')}</td>\n              <td>{profile.address}</td>\n              <td>\n                <Paragraph as=\"div\" $marginBottom=\"0\" $textAlign=\"center\">\n                  <Button\n                    title=\"Edit\"\n                    size=\"small\"\n                    $margin=\"0 5px 0 5px\"\n                    onClick={openEditModal.bind(null, profile)}\n                  ></Button>{' '}\n                  <Button\n                    title=\"Del\"\n                    size=\"small\"\n                    $margin=\"0 5px 0 5px\"\n                    onClick={openDeleteModal.bind(null, profile)}\n                  ></Button>\n                </Paragraph>\n              </td>\n            </Row>\n          ))}\n        </tbody>\n      </StyledTable>\n\n      {editProfile && (\n        <UserFormModal\n          title=\"Edit user\"\n          closeModal={() => setEditProfile(false)}\n          profile={editProfile}\n        />\n      )}\n      {deleteProfile && (\n        <UserDeleteModal\n          title=\"Delete user\"\n          closeModal={() => setDeleteProfile(false)}\n          profile={deleteProfile}\n        />\n      )}\n    </>\n  );\n};\n\nTable.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Table;\n","import React from 'react';\r\n\r\nimport Table from '../../components/Table';\r\nimport { useUsers } from '../../api/users';\r\n\r\nconst Users = () => {\r\n  const { data: users, isSuccess: usersLoaded } = useUsers();\r\n  return usersLoaded ? <Table data={users} /> : <div>loading...</div>;\r\n};\r\n\r\nexport default Users;\r\n","import React, { useState } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport 'normalize.css';\nimport ReactModal from 'react-modal';\n\nimport Container from './components/Container';\nimport Header from './components/Header';\nimport Users from './containers/Users';\nimport Button from './components/Button';\nimport Paragraph from './components/Paragraph';\nimport UserFormModal from './containers/UserFormModal';\n\nconst client = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: Infinity,\n      retry: false,\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\nReactModal.setAppElement('#root');\n\nfunction App() {\n  const [showModal, setModal] = useState(false);\n\n  return (\n    <QueryClientProvider client={client}>\n      <Header />\n      <Container>\n        <Paragraph $textAlign=\"right\">\n          <Button title=\"Add\" size=\"medium\" onClick={() => setModal(true)} />\n        </Paragraph>\n        <Users />\n      </Container>\n      {showModal && (\n        <UserFormModal\n          title=\"Add New User\"\n          closeModal={() => setModal(false)}\n        />\n      )}\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}